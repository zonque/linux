* TI Highspeed MMC host controller for OMAP

The Highspeed MMC Host Controller on TI OMAP family
provides an interface for MMC, SD, and SDIO types of memory cards.

This file documents differences between the core properties described
by mmc.txt and the properties used by the omap_hsmmc driver.

Required properties:
- compatible:
 Should be "ti,omap2-hsmmc", for OMAP2 controllers
 Should be "ti,omap3-hsmmc", for OMAP3 controllers
 Should be "ti,omap4-hsmmc", for OMAP4 controllers
- ti,hwmods: Must be "mmc<n>", n is controller instance starting 1

Optional properties:
ti,dual-volt: boolean, supports dual voltage cards
<supply-name>-supply: phandle to the regulator device tree node
"supply-name" examples are "vmmc", "vmmc_aux" etc
ti,non-removable: non-removable slot (like eMMC)
ti,needs-special-reset: Requires a special softreset sequence
ti,needs-special-hs-handling: HSMMC IP needs special setting for handling High Speed
ti,cirq-gpio: When omap_hsmmc module is suspended, its functional
clock is turned off. Without fclk it can't forward SDIO IRQs to the
system. For that to happen, it needs to tell the PRCM to restore
its fclk, which is done through the swakeup line.

                   ------
                  | PRCM |
                   ------
                    | ^
               fclk | | swakeup
                    v |
                  -------               ------
      <-- IRQ -- | hsmmc | <-- CIRQ -- | card |
                  -------               ------

The problem is, that on the AM335x family the swakeup line is
missing, it has not been routed from the module to the PRCM.
The way to work around this, is to reconfigure the dat1 line as a
GPIO upon suspend. Beyond this option you also need to set named
states "default" and "idle "in the .dts file for the pins, using
pinctrl-single.c. The MMC driver will then then toggle between
default and idle during the runtime.


Example:
	mmc1: mmc@0x4809c000 {
		compatible = "ti,omap4-hsmmc";
		reg = <0x4809c000 0x400>;
		ti,hwmods = "mmc1";
		ti,dual-volt;
		bus-width = <4>;
		vmmc-supply = <&vmmc>; /* phandle to regulator node */
		ti,non-removable;
	};

[am335x with with gpio for sdio irq]

	mmc1_cirq_pin: pinmux_cirq_pin {
		pinctrl-single,pins = <
			0x0f8 0x3f	/* MMC0_DAT1 as GPIO2_28 */
		>;
	};

	mmc1: mmc@48060000 {
		pinctrl-names = "default", "idle";
		pinctrl-0 = <&mmc1_pins>;
		pinctrl-1 = <&mmc1_cirq_pin>;
		ti,cirq-gpio = <&gpio3 28 0>;
		ti,non-removable;
		bus-width = <4>;
		vmmc-supply = <&ldo2_reg>;
		vmmc_aux-supply = <&vmmc>;
	};
